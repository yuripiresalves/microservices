version: "3"

services:
  database:
    container_name: micro_db
    image: "postgres:alpine"
    ports:
      - "5432:5432"
    volumes:
      - "postgresql_data:/var/lib/postgresql"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
    networks:
      - app-net

  zookeeper:
    container_name: micro_zookeeper
    image: "bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-net

  kafka:
    container_name: micro_kafka
    image: "bitnami/kafka:2"
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - app-net

  mysql:
    container_name: micro_mysql
    image: "mysql:latest"
    ports:
      - "3306:3306"
    volumes:
      - "mysql_data:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=docker
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgresql_data:
    driver: local
  mysql_data:
    driver: local
